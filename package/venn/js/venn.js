// Generated by CoffeeScript 1.7.1
(function() {
  var SVG, draw_venn1, draw_venn2, draw_venn3, draw_venn4;

  SVG = (function() {
    function SVG(elem, w, h, m) {
      this.w = w;
      this.h = h;
      this.m = m;
      this.svg = d3.select(elem).append("svg:svg").attr("class", "venn-diagram").attr("width", this.w + 2 * this.m).attr("height", this.h + 2 * this.m).append("g").attr("transform", "translate(" + this.m + "," + this.m + ")");
    }

    SVG.prototype.circle = function(x, y, r) {
      return this.svg.append("svg:circle").attr("cx", x).attr("cy", y).attr("r", r);
    };

    SVG.prototype.textLbl = function(str, x, y, opts) {
      if (opts == null) {
        opts = {};
      }
      return this.textLblE(this.svg, str, x, y, opts);
    };

    SVG.prototype.textStr = function(str, x, y, opts) {
      if (opts == null) {
        opts = {};
      }
      return this.textStrE(this.svg, str, x, y, opts);
    };

    SVG.prototype.textLblE = function(e, str, x, y, opts) {
      if (opts == null) {
        opts = {};
      }
      opts.css = 'lbl';
      return this.textE(e, str, x, y, opts);
    };

    SVG.prototype.textStrE = function(e, str, x, y, opts) {
      if (opts == null) {
        opts = {};
      }
      opts.css = 'str';
      return this.textE(e, str, x, y, opts);
    };

    SVG.prototype.textE = function(e, str, x, y, opts) {
      var ev, s, _i, _len, _ref, _ref1, _results;
      if (opts == null) {
        opts = {};
      }
      s = e.append("svg:text").text(str).attr('x', x).attr('y', y);
      s.attr("text-anchor", (_ref = opts.anchor) != null ? _ref : 'middle');
      if (opts.css) {
        s.attr("class", opts.css);
      }
      _ref1 = ['click', 'mouseover', 'mouseout', 'mousemove'];
      _results = [];
      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
        ev = _ref1[_i];
        if (opts[ev] != null) {
          _results.push(s.on(ev, opts[ev]));
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    };

    return SVG;

  })();

  draw_venn1 = function(elem, opts) {
    var h, r, svg, w;
    w = 600;
    h = 300;
    r = 400 / 3;
    svg = new SVG(elem, w, h, 5);
    svg.circle(150, r, r).style("fill", "cyan").style("fill-opacity", ".5");
    svg.textLbl(opts[1]['lbl'], 270, r / 3, {
      anchor: 'start',
      click: opts[1]['lblclick']
    });
    return svg.textStr(opts[1]['str'], 150, r, opts[1]);
  };

  draw_venn2 = function(elem, opts) {
    var b1, b2, h, r, s, ss, svg, w, z, _i, _len, _results;
    w = 600;
    h = 350;
    r = 400 / 3;
    z = r * Math.sqrt(3) / 2;
    svg = new SVG(elem, w, h, 5);
    svg.circle(r, r + 50, r).style("fill", "#6fff05");
    svg.circle(2 * r, r + 50, r).style("fill", "#ff6405");
    b1 = 1;
    b2 = 2;
    svg.textLbl(opts[b1]['lbl'], r + 20, 30, {
      anchor: 'end',
      click: opts[b1]['lblclick']
    });
    svg.textLbl(opts[b2]['lbl'], 2 * r - 20, 30, {
      anchor: 'start',
      click: opts[b2]['lblclick']
    });
    ss = [
      {
        ind: b1,
        x: r / 2,
        y: r + 50
      }, {
        ind: b2,
        x: 5 * r / 2,
        y: r + 50
      }, {
        ind: b1 | b2,
        x: 3 * r / 2,
        y: r + 50
      }
    ];
    _results = [];
    for (_i = 0, _len = ss.length; _i < _len; _i++) {
      s = ss[_i];
      _results.push((function(s) {
        return svg.textStr(opts[s.ind].str, s.x, s.y, opts[s.ind]);
      })(s));
    }
    return _results;
  };

  draw_venn3 = function(elem, opts) {
    var b1, b2, b3, h, lm, r, s, ss, svg, w, w2, z, _i, _len, _results;
    w = 400;
    w2 = 600;
    h = 380;
    r = 400 / 3;
    z = r * Math.sqrt(3) / 2.0;
    lm = 100;
    svg = new SVG(elem, w2, h, 30);
    svg.circle(w / 2 + lm, r, r).style("fill", "#6fff05");
    svg.circle(r + lm, r + z, r).style("fill", "#ff6405");
    svg.circle(2 * r + lm, r + z, r).style("fill", "#0525ff");
    b1 = 1;
    b2 = 2;
    b3 = 4;
    svg.textLbl(opts[b1]['lbl'], w / 4 + lm, r / 4, {
      anchor: 'end',
      click: opts[b1]['lblclick']
    });
    svg.textLbl(opts[b2]['lbl'], w / 10 + lm, r + 2 * z, {
      anchor: 'end',
      click: opts[b2]['lblclick']
    });
    svg.textLbl(opts[b3]['lbl'], w - r / 3 + lm, r + 2 * z, {
      anchor: 'start',
      click: opts[b3]['lblclick']
    });
    ss = [
      {
        ind: b1,
        x: w / 2,
        y: r / 2
      }, {
        ind: b2,
        x: w / 2 - r,
        y: r + z + 1.0 * z / 2.0
      }, {
        ind: b3,
        x: w / 2 + r,
        y: r + z + 1.0 * z / 2.0
      }, {
        ind: b1 | b2,
        x: r,
        y: r + 1 * z / 3
      }, {
        ind: b1 | b3,
        x: 2 * r,
        y: r + 1 * z / 3
      }, {
        ind: b2 | b3,
        x: w / 2,
        y: r + z + 1 * z / 2
      }, {
        ind: b1 | b2 | b3,
        x: w / 2,
        y: r + 2 * z / 3
      }
    ];
    _results = [];
    for (_i = 0, _len = ss.length; _i < _len; _i++) {
      s = ss[_i];
      _results.push((function(s) {
        return svg.textStr(opts[s.ind].str, s.x + lm, s.y, opts[s.ind]);
      })(s));
    }
    return _results;
  };

  draw_venn4 = function(elem, opts) {
    var b1, b2, b3, b4, rx, ry, s, ss, svg, z, _i, _len, _results;
    rx = 187;
    ry = 115;
    svg = new SVG(elem, 750, 390, 0);
    z = svg.svg.append("g").attr("transform", "translate(-50,-785)");
    z.append("g").attr("transform", "translate(479,1024) rotate(-40)").append("ellipse").attr("rx", rx).attr("ry", ry).style("fill", "#6fff05");
    z.append("g").attr("transform", "translate(407,938) rotate(-40)").append("ellipse").attr("rx", rx).attr("ry", ry).style("fill", "#ff6405");
    z.append("g").attr("transform", "translate(410,938) rotate(40)").append("ellipse").attr("rx", rx).attr("ry", ry).style("fill", "#0525ff");
    z.append("g").attr("transform", "translate(338,1024) rotate(40)").append("ellipse").attr("rx", rx).attr("ry", ry).style("fill", "#1e1e1e");
    b1 = 1;
    b2 = 2;
    b3 = 4;
    b4 = 8;
    svg.textLblE(z, opts[b1]['lbl'], 190, 900, {
      anchor: 'end',
      click: opts[b1]['lblclick']
    });
    svg.textLblE(z, opts[b2]['lbl'], 260, 810, {
      anchor: 'end',
      click: opts[b2]['lblclick']
    });
    svg.textLblE(z, opts[b3]['lbl'], 550, 810, {
      anchor: 'start',
      click: opts[b3]['lblclick']
    });
    svg.textLblE(z, opts[b4]['lbl'], 630, 900, {
      anchor: 'start',
      click: opts[b4]['lblclick']
    });
    ss = [
      {
        ind: b1,
        x: 215,
        y: 950
      }, {
        ind: b2,
        x: 295,
        y: 840
      }, {
        ind: b3,
        x: 505,
        y: 840
      }, {
        ind: b4,
        x: 605,
        y: 950
      }, {
        ind: b2 | b3,
        x: 405,
        y: 870
      }, {
        ind: b1 | b4,
        x: 405,
        y: 1130
      }, {
        ind: b1 | b2 | b3 | b4,
        x: 405,
        y: 1010
      }, {
        ind: b1 | b2 | b3,
        x: 325,
        y: 950
      }, {
        ind: b2 | b3 | b4,
        x: 475,
        y: 950
      }, {
        ind: b1 | b3,
        x: 285,
        y: 1030
      }, {
        ind: b2 | b4,
        x: 525,
        y: 1030
      }, {
        ind: b1 | b2,
        x: 270,
        y: 900
      }, {
        ind: b3 | b4,
        x: 545,
        y: 900
      }, {
        ind: b1 | b3 | b4,
        x: 345,
        y: 1070
      }, {
        ind: b1 | b2 | b4,
        x: 465,
        y: 1070
      }
    ];
    _results = [];
    for (_i = 0, _len = ss.length; _i < _len; _i++) {
      s = ss[_i];
      _results.push((function(s) {
        return svg.textStrE(z, opts[s.ind].str, s.x, s.y, opts[s.ind]);
      })(s));
    }
    return _results;
  };

  window.draw_venn = function(n, elem, opts) {
    switch (n) {
      case 1:
        return draw_venn1(elem, opts);
      case 2:
        return draw_venn2(elem, opts);
      case 3:
        return draw_venn3(elem, opts);
      case 4:
        return draw_venn4(elem, opts);
    }
  };

}).call(this);
